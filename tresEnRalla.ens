TECLAT EQU 0B000h
PANTALLA EQU 0A000h
ORIGEN 100h
INICIO ini
.DATOS
fila1 VALOR 0,0,0
fila2 VALOR 0,0,0
fila3 VALOR 0,0,0
adios VALOR 0766h, 0772h, 0761h, 0773h, 0765h

.CODIGO
ini:
    CALL Clean_teclat_pantalla 
    CALL Pintar_tauler
    CALL torn_jug1
    CALL fi
    
    Clean_teclat_pantalla:
        ;guardem en un registre l'adreça base del dispositiu pantalla 
        MOVH R0, BYTEALTO PANTALLA 
        MOVL R0, BYTEBAJO PANTALLA
        ;Netegem la pantalla
        MOVL R1,120
        MOVH R1,00H
        ADD R1,R0,R1 ;R1 apunta al registre de control de la PANTALLA
        MOVL R2,00000011B
        MOVH R2,00H
        MOV [R1],R2; Fiquem un 1 al primer bit del registre de control per esborrar la pantalla en cada inici
        
        ;Netejem el Teclado
        ;guardem en un registre l'adreça base del dispositiu pantalla 
        MOVH R0, BYTEALTO TECLAT 
        MOVL R0, BYTEBAJO TECLAT
        ;Accedim al registre de control
        INC R0
        ;Apliquem el bit de esborrat
        MOVH R3, 0
        MOVL R3, 0000100b
        MOV [R0],R3
    RET

    Pintar_tauler:
        MOVH R4, 00h                  		
        MOVL R4, 10

        MOVH R0, BYTEALTO PANTALLA 
        MOVL R0, BYTEBAJO PANTALLA
        MOVH R3,  00h
        MOVL R3,  47                            	                                                       
        ADD R3, R0, R3        
        MOVH R2, 00000111b                     		
        MOVL R2, 43h                          		         
        MOV [R3], R2

        INC R3
        MOVH R2, 00000111b                     		
        MOVL R2, 4Fh                          		         
        MOV [R3], R2

        INC R3
        MOVH R2, 00000111b                     		
        MOVL R2, 4Ch                          		         
        MOV [R3], R2

        INC R3
        INC R3
        MOVH R2, 00000111b                     		
        MOVL R2, 31h                          		         
        MOV [R3], R2

        INC R3
        MOVH R2, 00000111b                     		
        MOVL R2, 32h                          		         
        MOV [R3], R2

        INC R3
        MOVH R2, 00000111b                     		
        MOVL R2, 33h                          		         
        MOV [R3], R2

        
        ADD R3,R4,R3
        MOVH R2, 00000111b                     		
        MOVL R2, 46h                          		         
        MOV [R3], R2

        INC R3
        INC R3
        MOVH R2, 00000111b                     		
        MOVL R2, 31h                          		         
        MOV [R3], R2

        CALL tres_blancs
       
        ADD R3,R4,R3
        MOVH R2, 00000111b                     		
        MOVL R2, 49h                          		         
        MOV [R3], R2

        INC R3
        INC R3
        MOVH R2, 00000111b                     		
        MOVL R2, 32h                          		         
        MOV [R3], R2

        CALL tres_blancs

        ADD R3, R4, R3
        MOVH R2, 00000111b                     		
        MOVL R2, 4Ch                          		         
        MOV [R3], R2

        INC R3
        INC R3
        MOVH R2, 00000111b                     		
        MOVL R2, 33h                          		         
        MOV [R3], R2

        CALL tres_blancs
    RET

    tres_blancs:
        INC R3
        MOVH R2, 00111111b                     		
        MOVL R2, 00h                          		         
        MOV [R3], R2

        INC R3
        MOVH R2, 00111111b                     		
        MOVL R2, 00h                          		         
        MOV [R3], R2

        INC R3
        MOVH R2, 00111111b                     		
        MOVL R2, 00h                          		         
        MOV [R3], R2
    RET

    torn_jug1:
        MOVL R4, BYTEBAJO DIRECCION adios ; vector (sol baixos)
        MOVH R4, BYTEALTO DIRECCION adios ; vector (sol baixos)
        
        
        MOV R3, R0              ; pantalla
        INC R3                  ; seguent caracter
        MOV R2,[R4]             ; lletra            		         
        MOV [R3], R2
        INC R4

        INC R3                  
        MOV R2,[R4]                         		         
        MOV [R3], R2
        INC R4

        INC R3                  
        MOV R2,[R4]                          		         
        MOV [R3], R2
        INC R4

        INC R3                  
        MOV R2,[R4]                           		         
        MOV [R3], R2
        INC R4

        INC R3                  
        MOV R2,[R4]                           		         
        MOV [R3], R2
        INC R4

        CALL dos_punts
    RET
        
    

    fi:
        JMP -1
    RET

    dos_punts:
        INC R3
        MOVH R2, 00000111b                     		
        MOVL R2, 3Ah                          		         
        MOV [R3], R2
    RET
    FIN
    



